/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import model.EmployeeHistory;
import model.Employee;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.ImageIcon;


/**
 *
 * @author adityaillur
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    EmployeeHistory history;
    private String imageFilePath;
    
    public ViewJPanel(EmployeeHistory history) {
        initComponents();
        
        this.history = history;
        
        populateTable();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtgen = new javax.swing.JTextField();
        txtage = new javax.swing.JTextField();
        txtstDt = new javax.swing.JTextField();
        lblage = new javax.swing.JLabel();
        lblstDt = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblempID = new javax.swing.JLabel();
        txtempID = new javax.swing.JTextField();
        lblgen = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        lblemail = new javax.swing.JLabel();
        lbllvl = new javax.swing.JLabel();
        txtlvl = new javax.swing.JTextField();
        txtteamInfo = new javax.swing.JTextField();
        lblteamInfo = new javax.swing.JLabel();
        txtposTitl = new javax.swing.JTextField();
        lblposTitl = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblpic = new javax.swing.JLabel();
        lblimg = new javax.swing.JLabel();
        txtimg = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Employee");

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Email", "Img"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgenActionPerformed(evt);
            }
        });

        lblage.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblage.setText("Age");

        lblstDt.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblstDt.setText("Start Date");

        lblName.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblName.setText("Name");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblempID.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblempID.setText("Employee ID");

        txtempID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtempIDActionPerformed(evt);
            }
        });

        lblgen.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblgen.setText("Gender");

        lblemail.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblemail.setText("Email ID");

        lbllvl.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lbllvl.setText("Level");

        lblteamInfo.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblteamInfo.setText("Team Information");

        lblposTitl.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblposTitl.setText("Position Title");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Search");

        lblimg.setText("Image Path");

        txtimg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtimgActionPerformed(evt);
            }
        });

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(192, 192, 192))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbllvl)
                    .addComponent(lblteamInfo)
                    .addComponent(lblposTitl)
                    .addComponent(lblemail)
                    .addComponent(lblstDt)
                    .addComponent(lblempID)
                    .addComponent(lblgen)
                    .addComponent(lblage)
                    .addComponent(jLabel1)
                    .addComponent(lblName)
                    .addComponent(lblimg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtgen, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtstDt, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtempID)
                            .addComponent(txtName)
                            .addComponent(txtlvl)
                            .addComponent(txtposTitl)
                            .addComponent(txtteamInfo)
                            .addComponent(txtage, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtemail)
                            .addComponent(txtSearch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addGap(20, 20, 20)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(lblpic, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtimg, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtempID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstDt))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblempID)
                            .addComponent(txtstDt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtgen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblgen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbllvl)
                            .addComponent(txtteamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblteamInfo)
                            .addComponent(txtposTitl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblposTitl)
                            .addComponent(txtlvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblemail)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblpic, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblimg)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtimg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        /*int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a Row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        Employee selectedEmployee = (Employee)model.getValueAt(selectedRowIndex, 0);
        
        for(Employee eh : history.getHistory()){    
            System.out.println(eh.toString());
        }
        
        history.deleteEmployee(selectedEmployee);
        
        for(Employee eh : history.getHistory()){    
            System.out.println(eh.toString());
        }
        
        JOptionPane.showMessageDialog(this, "Employee data Deleted!!!");
        
        populateTable();*/
        int selectedRowIndex =  tblEmployee.getSelectedRow();
            if(selectedRowIndex<0){
             JOptionPane.showMessageDialog(this, "Select the Employee to Delete");
             return;
         }
        
        DefaultTableModel model = (DefaultTableModel)tblEmployee.getModel();
        
        Employee temp = new Employee();
        
        temp.setName((String) model.getValueAt(selectedRowIndex, 0));
        temp.setempID((String) model.getValueAt(selectedRowIndex, 1));
        temp.setage((String) model.getValueAt(selectedRowIndex, 2));
        temp.setgen((String) model.getValueAt(selectedRowIndex, 3));
        temp.setstDt((String) model.getValueAt(selectedRowIndex,4));
        temp.setlvl((String) model.getValueAt(selectedRowIndex, 5));
        temp.setteamInfo((String) model.getValueAt(selectedRowIndex, 6));
        temp.setposTitl((String) model.getValueAt(selectedRowIndex, 7));        
        temp.setemail((String) model.getValueAt(selectedRowIndex, 8));
        temp.setPic((String) model.getValueAt(selectedRowIndex, 9));
        
        //model.getVa
        
        history.deleteEmployee(temp);
        
        JOptionPane.showMessageDialog(this, "Selected Employee Deleted "); 
        populateTable();
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a Row to Update");
            return;
        }
        
        ImageIcon photoIcon = new ImageIcon(image);
        Image ph = photoIcon.getImage();
        ph = ph.getScaledInstance(lblpic.getWidth(), lblpic.getHeight(), ph.SCALE_SMOOTH);
        lblpic.setIcon(new ImageIcon(ph));
        
        
        
        
        if(tblEmployee.getSelectedRowCount() == 1){
            //if single row is selected then update
            String name = txtName.getText();
            String empID = txtempID.getText();
            String age = txtage.getText();
            String stDt = txtstDt.getText();
            String lvl = txtlvl.getText();
            String teamInfo = txtteamInfo.getText();
            String posTitl = txtposTitl.getText();
            String email = txtemail.getText();
            String gen = txtgen.getText();
            String pic = image;
       
            model.setValueAt(name, tblEmployee.getSelectedRow(), 0);
            model.setValueAt(empID, tblEmployee.getSelectedRow(), 1);
            model.setValueAt(age, tblEmployee.getSelectedRow(), 2);
            model.setValueAt(stDt, tblEmployee.getSelectedRow(), 3);
            model.setValueAt(lvl, tblEmployee.getSelectedRow(), 4);
            model.setValueAt(teamInfo, tblEmployee.getSelectedRow(), 5);
            model.setValueAt(posTitl, tblEmployee.getSelectedRow(), 6);
            model.setValueAt(email, tblEmployee.getSelectedRow(), 7);
            model.setValueAt(gen, tblEmployee.getSelectedRow(), 8);
            model.setValueAt(pic, tblEmployee.getSelectedRow(), 9);

            JOptionPane.showMessageDialog(this, "Update Successful !!!");
        }
        else{
            
            if(tblEmployee.getRowCount () == 0){
                //if table is empty
                JOptionPane.showMessageDialog(this, "Table is empty !!!");
            }
            else{
                //if row is not selected or multiple row is selected
                JOptionPane.showMessageDialog(this, "Please select single row for update !!!");

            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgenActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        
        txtName.setText(model.getValueAt(tblEmployee.getSelectedRow(), 0).toString());
        txtempID.setText(model.getValueAt(tblEmployee.getSelectedRow(), 1).toString());
        txtage.setText(model.getValueAt(tblEmployee.getSelectedRow(), 2).toString());
        txtstDt.setText(model.getValueAt(tblEmployee.getSelectedRow(), 3).toString());
        txtlvl.setText(model.getValueAt(tblEmployee.getSelectedRow(), 4).toString());
        txtteamInfo.setText(model.getValueAt(tblEmployee.getSelectedRow(), 5).toString());
        txtposTitl.setText(model.getValueAt(tblEmployee.getSelectedRow(), 6).toString());
        txtemail.setText(model.getValueAt(tblEmployee.getSelectedRow(), 7).toString());
        txtgen.setText(model.getValueAt(tblEmployee.getSelectedRow(), 8).toString());
        txtimg.setText(model.getValueAt(tblEmployee.getSelectedRow(), 9).toString());

      
        ImageIcon image = new ImageIcon(txtimg.getText());
        image = new ImageIcon(image.getImage() . getScaledInstance (120, 120, Image.SCALE_SMOOTH)) ;
        lblpic.setIcon(image);
        

    }//GEN-LAST:event_tblEmployeeMouseClicked

    public void search(String str){
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();

        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<> (model);
        tblEmployee.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(str));
    }
    
    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String Search=txtSearch.getText();
        search(Search);
       
        
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtempIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtempIDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtempIDActionPerformed

    private void txtimgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtimgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtimgActionPerformed
    private String image;
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File newfile = chooser.getSelectedFile();
        imageFilePath = newfile.getAbsolutePath();
        image = imageFilePath;
        ImageIcon photoIcon = new ImageIcon(newfile.getAbsolutePath());
        Image ph = photoIcon.getImage();
        ph = ph.getScaledInstance(lblpic.getWidth(), lblpic.getHeight(), ph.SCALE_SMOOTH);
        lblpic.setIcon(new ImageIcon(ph));
        txtimg.setText(imageFilePath);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lblempID;
    private javax.swing.JLabel lblgen;
    private javax.swing.JLabel lblimg;
    private javax.swing.JLabel lbllvl;
    private javax.swing.JLabel lblpic;
    private javax.swing.JLabel lblposTitl;
    private javax.swing.JLabel lblstDt;
    private javax.swing.JLabel lblteamInfo;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtempID;
    private javax.swing.JTextField txtgen;
    private javax.swing.JTextField txtimg;
    private javax.swing.JTextField txtlvl;
    private javax.swing.JTextField txtposTitl;
    private javax.swing.JTextField txtstDt;
    private javax.swing.JTextField txtteamInfo;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[10];
        
        for(Employee eh : history.getHistory()){
        
             
            row[0] = eh.getName();
            row[2] = eh.getAge();
            row[1] = eh.getEmpID();
            row[3] = eh.getgen();
            row[5] = eh.getlvl();
            row[7] = eh.getposTitl();
            row[4] = eh.getstDt();
            row[6] = eh.getteamInfo();
            row[8] = eh.getemail();
            row[9] = eh.getPic();
            model.addRow(row);
                            
        }
            
    }
}
